# Amazon FPGA Hardware Development Kit
#
# Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Amazon Software License (the "License"). You may not use
# this file except in compliance with the License. A copy of the License is
# located at
#
#    http://aws.amazon.com/asl/
#
# or in the "license" file accompanying this file. This file is distributed on
# an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or
# implied. See the License for the specific language governing permissions and
# limitations under the License.

# Copyright (c) 2009-2017, NVIDIA CORPORATION. All rights reserved.
# NVIDIAâ€™s contributions are offered under the Amazon Software License


##################################################################
## Makefile For VCS compiles and simulations
## Step to run :
## 1. make create_libs VCS=1  -> To generate xilinx compile 
##    libraries. This is a one time step
## 2. make all VCS=1  -> Runs the test
##################################################################

ifeq ($(COSIM), 1)
export DPI_FUNCTIONS = set_apb_rd set_apb_wr set_irq_rd set_irq_wr set_ram_rd set_ram_wr set_ev_trigger sv_int_ack sv_printf apb_read_ack ram_read_ack irq_read_ack
compile: $(COMPLIB_DIR)
	mkdir -p $(SIM_DIR)
	cd ${SIM_DIR} && rm -rf csrc AN.DB simv* *.log DEFAULT.DB   DVEfiles/ *.vpd && syscan -export_DPI $(DPI_FUNCTIONS) && syscan -full64 -sysc=230  -CFLAGS "-I$(C_INC_DIR) -I$(CL_COMMON_ROOT)/software/include -std=c++11 -DSV_TEST" $(CL_COMMON_ROOT)/software/src/cosim_top.cpp:cosim_top -l compile.sysc.log
	cd ${SIM_DIR} && ln -s -f ../vcs/vcs_complib/synopsys_sim.setup 
	cd ${SIM_DIR} && rm -rf csrc AN.DB simv* *.log DEFAULT.DB   DVEfiles/ *.vpd && syscan -export_DPI $(DPI_FUNCTIONS) && syscan -full64 -sysc=230  -CFLAGS "-I$(C_INC_DIR) -I$(CL_COMMON_ROOT)/software/include -std=c++11 -DSV_TEST" $(CL_COMMON_ROOT)/software/src/cosim_top.cpp:cosim_top -l compile.sysc.log
	cd $(SIM_DIR) && vlogan -ntb_opts tb_timescale=1ps/1ps -timescale=1ps/1ps -sverilog +systemverilogext+.sv +libext+.sv +libext+.v -full64 -lca -v2005 +v2k -l compile.vlogan.log -f $(SCRIPTS_DIR)/top.$(SIMULATOR).f +define+VCS +define+COSIM_TOP $(DEFINES) $(NVDLA_HW_DEFINES) +lint=TFIPC-L
	cd $(SIM_DIR) && vcs tb $(TEST) $(C_TEST_NAME) -CFLAGS "-I$(C_INC_DIR) -I$(CL_COMMON_ROOT)/software/include -I$(NVDLA_REGISTER_HEADER_DIR) -I$(SIM_DIR) -DSV_TEST -DDEBUG -DCONFIG_LOGLEVEL=4 -std=c++11" -debug_all -M -I +lint=TFIPC-L -debug_pp glbl -ntb_opts tb_timescale=1ps/1ps -timescale=1ps/1ps -sverilog -sysc=230 -full64 +memcbk -licqueue -lca -v2005 -l compile.vcs.log
else
compile: $(COMPLIB_DIR)
	mkdir -p $(SIM_DIR)
	cd ${SIM_DIR} && ln -s -f ../vcs/vcs_complib/synopsys_sim.setup 
	cd $(SIM_DIR) && vlogan -ntb_opts tb_timescale=1ps/1ps -timescale=1ps/1ps -sverilog +systemverilogext+.sv +libext+.sv +libext+.v -full64 -kdb -lca -v2005 +v2k -l compile.vlogan.log -f $(SCRIPTS_DIR)/top.$(SIMULATOR).f +define+VCS $(DEFINES) $(NVDLA_HW_DEFINES) +lint=TFIPC-L
ifeq ($(TRACE_TEST), 1)
	cd $(NVDLA_TRACE_PLAYER_ROOT)/build && make NVDLA_TRACE_PLAYER_CFLAGS=$(NVDLA_TRACE_PLAYER_CFLAGS)
	cd $(SIM_DIR) && vcs tb $(TEST) $(C_TEST_NAME) -CFLAGS "-I$(C_INC_DIR) -I$(CL_COMMON_ROOT)/software/include -I$(NVDLA_REGISTER_HEADER_DIR) -I$(NVDLA_TRACE_PLAYER_INCLUDES) -I$(SIM_DIR) -DSV_TEST -DDEBUG -DCONFIG_LOGLEVEL=4" -LDFLAGS "-Wl,-rpath=$(NVDLA_TRACE_PLAYER_LIB_DIR) -L$(NVDLA_TRACE_PLAYER_LIB_DIR) -l$(NVDLA_TRACE_PLAYER_LIB)" -debug_all -M -I +lint=TFIPC-L -debug_pp glbl -ntb_opts tb_timescale=1ps/1ps -timescale=1ps/1ps -sverilog -full64 +memcbk -licqueue -kdb -lca -v2005 -l compile.vcs.log
else
	cd $(SIM_DIR) && vcs tb $(TEST) $(C_TEST_NAME) -CFLAGS "-I$(C_INC_DIR) -I$(CL_COMMON_ROOT)/software/include -I$(NVDLA_REGISTER_HEADER_DIR) -I$(SIM_DIR) -DSV_TEST -DDEBUG -DCONFIG_LOGLEVEL=4" -debug_all -M -I +lint=TFIPC-L -debug_pp glbl -ntb_opts tb_timescale=1ps/1ps -timescale=1ps/1ps -sverilog -full64 +memcbk -licqueue -lca -v2005 -l compile.vcs.log
endif
endif

run:
	mkdir -p $(RUN_DIR)
ifeq ($(TRACE_TEST), 1)
	cd $(RUN_DIR) && $(NVDLA_TRACE_PARSER) -f $(NVDLA_TRACE)
	cd $(RUN_DIR) && gcc -fPIC -c $(NVDLA_TRACE_PARSER_COMMAND_SRC) -o $(NVDLA_TRACE_PARSER_COMMAND_OBJ) -I$(NVDLA_REGISTER_HEADER_DIR) -I$(NVDLA_TRACE_PLAYER_INCLUDES)
	cd $(RUN_DIR) && gcc -fPIC -shared -o $(NVDLA_TRACE_PARSER_COMMAND_LIB) $(NVDLA_TRACE_PARSER_COMMAND_OBJ)
endif
	cd $(RUN_DIR) && $(SIM_DIR)/simv -l $(TEST).log $(PLUSARGS) +ntb_random_seed_automatic +vpdfile+$(TEST).vpd +trace_output_lib=$(NVDLA_TRACE_PARSER_COMMAND_LIB) $(NVDLA_ENABLE_SIM_MEM)

$(COMPLIB_DIR):
	cd $(SIM_ROOT)/.. && echo "compile_simlib -language all -dir $(COMPLIB_DIR) -simulator $(SIMULATOR) -library all -family  all" > create_libs.tcl
	cd $(SIM_ROOT)/.. && vivado -mode batch -source create_libs.tcl
	cd $(SIM_ROOT)/.. && rm -rf create_libs.tcl
